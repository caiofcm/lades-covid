{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chart-wrapper/chart-wrapper.component.ts","./src/app/chart-wrapper/chart-wrapper.component.html","./src/app/chips-autocomplete/chips-autocomplete.component.ts","./src/app/chips-autocomplete/chips-autocomplete.component.html","./src/app/data/countries.ts","./src/app/main-app/main-app.component.ts","./src/app/main-app/main-app.component.html","./src/app/page-brazil/page-brazil.component.ts","./src/app/page-brazil/page-brazil.component.html","./src/app/pages/page-global/page-global.component.ts","./src/app/pages/page-global/page-global.component.html","./src/app/services/global-data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageGlobalComponent } from './pages/page-global/page-global.component';\nimport { PageBrazilComponent } from './page-brazil/page-brazil.component';\n\n\nconst routes: Routes = [\n  {path: '', component: PageGlobalComponent},\n  {path: 'brazil', component: PageBrazilComponent},\n  {path: 'analyzes', component: PageBrazilComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Covid19 - LADES';\n}\n","<app-main-app>\n  <router-outlet></router-outlet>\n</app-main-app>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { MainAppComponent } from './main-app/main-app.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatInputModule} from '@angular/material/input';\n\n// import * as PlotlyJS from 'plotly.js/dist/plotly.js';\n// import { PlotlyModule } from 'angular-plotly.js';\n// PlotlyModule.plotlyjs = PlotlyJS;\nimport { PlotlyViaCDNModule } from 'angular-plotly.js';\nPlotlyViaCDNModule.plotlyVersion = 'latest'; // can be `latest` or any version number (i.e.: '1.40.0')\nPlotlyViaCDNModule.plotlyBundle = 'basic'; // optional: can be null (for full) or 'basic', 'cartesian', 'geo',\n\nimport { ChartWrapperComponent } from './chart-wrapper/chart-wrapper.component';\nimport { PageGlobalComponent } from './pages/page-global/page-global.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ChipsAutocompleteComponent } from './chips-autocomplete/chips-autocomplete.component';\nimport { PageBrazilComponent } from './page-brazil/page-brazil.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainAppComponent,\n    ChartWrapperComponent,\n    PageGlobalComponent,\n    ChipsAutocompleteComponent,\n    PageBrazilComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatInputModule,\n    MatChipsModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    PlotlyViaCDNModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-chart-wrapper\",\n  templateUrl: \"./chart-wrapper.component.html\",\n  styleUrls: [\"./chart-wrapper.component.scss\"],\n})\nexport class ChartWrapperComponent implements OnInit {\n  graph = {\n    data: [\n      {\n        x: [1, 2, 3],\n        y: [2, 6, 3],\n        type: \"scatter\",\n        mode: \"lines+points\",\n        marker: { color: \"red\" },\n      },\n      { x: [1, 2, 3], y: [2, 5, 3], type: \"bar\" },\n    ],\n    layout: { width: 320, height: 240, title: \"A Fancy Plot\" },\n  };\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<plotly-plot [data]=\"graph.data\" [layout]=\"graph.layout\"></plotly-plot>\n","import { COMMA, ENTER } from \"@angular/cdk/keycodes\";\nimport { Component, OnInit, ElementRef, ViewChild, Output, EventEmitter } from \"@angular/core\";\nimport { FormControl } from \"@angular/forms\";\nimport { Observable } from \"rxjs\";\nimport {\n  MatAutocompleteSelectedEvent,\n  MatAutocomplete,\n} from \"@angular/material/autocomplete\";\nimport { MatChipInputEvent } from '@angular/material/chips';\nimport { startWith, map } from 'rxjs/operators';\nimport {countryNames} from '../data/countries'\n\n@Component({\n  selector: \"app-chips-autocomplete\",\n  templateUrl: \"./chips-autocomplete.component.html\",\n  styleUrls: [\"./chips-autocomplete.component.scss\"],\n})\nexport class ChipsAutocompleteComponent implements OnInit {\n  visible = true;\n  selectable = true;\n  removable = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n  fruitCtrl = new FormControl();\n  filteredCountries: Observable<string[]>;\n  countries: string[] = [\"Brazil\", 'United States', 'Italy', 'Spain'];\n  allCountries: string[] = countryNames\n\n  @Output() onSelectionChange = new EventEmitter<string[]>()\n\n  @ViewChild(\"fruitInput\", { static: true }) fruitInput: ElementRef<\n    HTMLInputElement\n  >;\n  @ViewChild(\"auto\", { static: true }) matAutocomplete: MatAutocomplete;\n\n  constructor() {\n    this.filteredCountries = this.fruitCtrl.valueChanges.pipe(\n      startWith(null),\n      map((fruit: string | null) =>\n        fruit ? this._filter(fruit) : this.allCountries.slice()\n      )\n    );\n  }\n\n  add(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    // Add our fruit\n    if ((value || \"\").trim()) {\n      this.countries.push(value.trim());\n    }\n\n    // Reset the input value\n    if (input) {\n      input.value = \"\";\n    }\n\n    this.fruitCtrl.setValue(null);\n  }\n\n  remove(fruit: string): void {\n    const index = this.countries.indexOf(fruit);\n\n    if (index >= 0) {\n      this.countries.splice(index, 1);\n    }\n    this.onSelectionChange.emit(this.countries)\n  }\n\n  selected(event: MatAutocompleteSelectedEvent): void {\n    this.countries.push(event.option.viewValue);\n    this.fruitInput.nativeElement.value = \"\";\n    this.fruitCtrl.setValue(null);\n    this.onSelectionChange.emit(this.countries)\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.allCountries.filter(\n      (fruit) => fruit.toLowerCase().indexOf(filterValue) === 0\n    );\n  }\n\n  ngOnInit(): void {\n    this.onSelectionChange.emit(this.countries)\n  }\n}\n","<mat-form-field class=\"example-chip-list\">\n  <mat-chip-list #chipList aria-label=\"Fruit selection\">\n    <mat-chip\n      *ngFor=\"let fruit of countries\"\n      [selectable]=\"selectable\"\n      [removable]=\"removable\"\n      (removed)=\"remove(fruit)\">\n      {{fruit}}\n      <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n    </mat-chip>\n    <input\n      placeholder=\"New country...\"\n      #fruitInput\n      [formControl]=\"fruitCtrl\"\n      [matAutocomplete]=\"auto\"\n      [matChipInputFor]=\"chipList\"\n      [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n      (matChipInputTokenEnd)=\"add($event)\">\n  </mat-chip-list>\n  <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"selected($event)\">\n    <mat-option *ngFor=\"let item of filteredCountries | async\" [value]=\"item\">\n      {{item}}\n    </mat-option>\n  </mat-autocomplete>\n</mat-form-field>\n","export const countries = {\n  AF: 'Afghanistan',\n  AX: 'Aland Islands',\n  AL: 'Albania',\n  DZ: 'Algeria',\n  AS: 'American Samoa',\n  AD: 'Andorra',\n  AO: 'Angola',\n  AI: 'Anguilla',\n  AQ: 'Antarctica',\n  AG: 'Antigua And Barbuda',\n  AR: 'Argentina',\n  AM: 'Armenia',\n  AW: 'Aruba',\n  AU: 'Australia',\n  AT: 'Austria',\n  AZ: 'Azerbaijan',\n  BS: 'Bahamas',\n  BH: 'Bahrain',\n  BD: 'Bangladesh',\n  BB: 'Barbados',\n  BY: 'Belarus',\n  BE: 'Belgium',\n  BZ: 'Belize',\n  BJ: 'Benin',\n  BM: 'Bermuda',\n  BT: 'Bhutan',\n  BO: 'Bolivia',\n  BA: 'Bosnia And Herzegovina',\n  BW: 'Botswana',\n  BV: 'Bouvet Island',\n  BR: 'Brazil',\n  IO: 'British Indian Ocean Territory',\n  BN: 'Brunei Darussalam',\n  BG: 'Bulgaria',\n  BF: 'Burkina Faso',\n  BI: 'Burundi',\n  KH: 'Cambodia',\n  CM: 'Cameroon',\n  CA: 'Canada',\n  CV: 'Cape Verde',\n  KY: 'Cayman Islands',\n  CF: 'Central African Republic',\n  TD: 'Chad',\n  CL: 'Chile',\n  CN: 'China',\n  CX: 'Christmas Island',\n  CC: 'Cocos (Keeling) Islands',\n  CO: 'Colombia',\n  KM: 'Comoros',\n  CG: 'Congo',\n  CD: 'Congo, Democratic Republic',\n  CK: 'Cook Islands',\n  CR: 'Costa Rica',\n  CI: 'Cote D\\'Ivoire',\n  HR: 'Croatia',\n  CU: 'Cuba',\n  CY: 'Cyprus',\n  CZ: 'Czech Republic',\n  DK: 'Denmark',\n  DJ: 'Djibouti',\n  DM: 'Dominica',\n  DO: 'Dominican Republic',\n  EC: 'Ecuador',\n  EG: 'Egypt',\n  SV: 'El Salvador',\n  GQ: 'Equatorial Guinea',\n  ER: 'Eritrea',\n  EE: 'Estonia',\n  ET: 'Ethiopia',\n  FK: 'Falkland Islands (Malvinas)',\n  FO: 'Faroe Islands',\n  FJ: 'Fiji',\n  FI: 'Finland',\n  FR: 'France',\n  GF: 'French Guiana',\n  PF: 'French Polynesia',\n  TF: 'French Southern Territories',\n  GA: 'Gabon',\n  GM: 'Gambia',\n  GE: 'Georgia',\n  DE: 'Germany',\n  GH: 'Ghana',\n  GI: 'Gibraltar',\n  GR: 'Greece',\n  GL: 'Greenland',\n  GD: 'Grenada',\n  GP: 'Guadeloupe',\n  GU: 'Guam',\n  GT: 'Guatemala',\n  GG: 'Guernsey',\n  GN: 'Guinea',\n  GW: 'Guinea-Bissau',\n  GY: 'Guyana',\n  HT: 'Haiti',\n  HM: 'Heard Island & Mcdonald Islands',\n  VA: 'Holy See (Vatican City State)',\n  HN: 'Honduras',\n  HK: 'Hong Kong',\n  HU: 'Hungary',\n  IS: 'Iceland',\n  IN: 'India',\n  ID: 'Indonesia',\n  IR: 'Iran, Islamic Republic Of',\n  IQ: 'Iraq',\n  IE: 'Ireland',\n  IM: 'Isle Of Man',\n  IL: 'Israel',\n  IT: 'Italy',\n  JM: 'Jamaica',\n  JP: 'Japan',\n  JE: 'Jersey',\n  JO: 'Jordan',\n  KZ: 'Kazakhstan',\n  KE: 'Kenya',\n  KI: 'Kiribati',\n  KR: 'Korea',\n  KW: 'Kuwait',\n  KG: 'Kyrgyzstan',\n  LA: 'Lao People\\'s Democratic Republic',\n  LV: 'Latvia',\n  LB: 'Lebanon',\n  LS: 'Lesotho',\n  LR: 'Liberia',\n  LY: 'Libyan Arab Jamahiriya',\n  LI: 'Liechtenstein',\n  LT: 'Lithuania',\n  LU: 'Luxembourg',\n  MO: 'Macao',\n  MK: 'Macedonia',\n  MG: 'Madagascar',\n  MW: 'Malawi',\n  MY: 'Malaysia',\n  MV: 'Maldives',\n  ML: 'Mali',\n  MT: 'Malta',\n  MH: 'Marshall Islands',\n  MQ: 'Martinique',\n  MR: 'Mauritania',\n  MU: 'Mauritius',\n  YT: 'Mayotte',\n  MX: 'Mexico',\n  FM: 'Micronesia, Federated States Of',\n  MD: 'Moldova',\n  MC: 'Monaco',\n  MN: 'Mongolia',\n  ME: 'Montenegro',\n  MS: 'Montserrat',\n  MA: 'Morocco',\n  MZ: 'Mozambique',\n  MM: 'Myanmar',\n  NA: 'Namibia',\n  NR: 'Nauru',\n  NP: 'Nepal',\n  NL: 'Netherlands',\n  AN: 'Netherlands Antilles',\n  NC: 'New Caledonia',\n  NZ: 'New Zealand',\n  NI: 'Nicaragua',\n  NE: 'Niger',\n  NG: 'Nigeria',\n  NU: 'Niue',\n  NF: 'Norfolk Island',\n  MP: 'Northern Mariana Islands',\n  NO: 'Norway',\n  OM: 'Oman',\n  PK: 'Pakistan',\n  PW: 'Palau',\n  PS: 'Palestinian Territory, Occupied',\n  PA: 'Panama',\n  PG: 'Papua New Guinea',\n  PY: 'Paraguay',\n  PE: 'Peru',\n  PH: 'Philippines',\n  PN: 'Pitcairn',\n  PL: 'Poland',\n  PT: 'Portugal',\n  PR: 'Puerto Rico',\n  QA: 'Qatar',\n  RE: 'Reunion',\n  RO: 'Romania',\n  RU: 'Russian Federation',\n  RW: 'Rwanda',\n  BL: 'Saint Barthelemy',\n  SH: 'Saint Helena',\n  KN: 'Saint Kitts And Nevis',\n  LC: 'Saint Lucia',\n  MF: 'Saint Martin',\n  PM: 'Saint Pierre And Miquelon',\n  VC: 'Saint Vincent And Grenadines',\n  WS: 'Samoa',\n  SM: 'San Marino',\n  ST: 'Sao Tome And Principe',\n  SA: 'Saudi Arabia',\n  SN: 'Senegal',\n  RS: 'Serbia',\n  SC: 'Seychelles',\n  SL: 'Sierra Leone',\n  SG: 'Singapore',\n  SK: 'Slovakia',\n  SI: 'Slovenia',\n  SB: 'Solomon Islands',\n  SO: 'Somalia',\n  ZA: 'South Africa',\n  GS: 'South Georgia And Sandwich Isl.',\n  ES: 'Spain',\n  LK: 'Sri Lanka',\n  SD: 'Sudan',\n  SR: 'Suriname',\n  SJ: 'Svalbard And Jan Mayen',\n  SZ: 'Swaziland',\n  SE: 'Sweden',\n  CH: 'Switzerland',\n  SY: 'Syrian Arab Republic',\n  TW: 'Taiwan',\n  TJ: 'Tajikistan',\n  TZ: 'Tanzania',\n  TH: 'Thailand',\n  TL: 'Timor-Leste',\n  TG: 'Togo',\n  TK: 'Tokelau',\n  TO: 'Tonga',\n  TT: 'Trinidad And Tobago',\n  TN: 'Tunisia',\n  TR: 'Turkey',\n  TM: 'Turkmenistan',\n  TC: 'Turks And Caicos Islands',\n  TV: 'Tuvalu',\n  UG: 'Uganda',\n  UA: 'Ukraine',\n  AE: 'United Arab Emirates',\n  GB: 'United Kingdom',\n  US: 'United States',\n  UM: 'United States Outlying Islands',\n  UY: 'Uruguay',\n  UZ: 'Uzbekistan',\n  VU: 'Vanuatu',\n  VE: 'Venezuela',\n  VN: 'Viet Nam',\n  VG: 'Virgin Islands, British',\n  VI: 'Virgin Islands, U.S.',\n  WF: 'Wallis And Futuna',\n  EH: 'Western Sahara',\n  YE: 'Yemen',\n  ZM: 'Zambia',\n  ZW: 'Zimbabwe'\n}\n\nexport const countriesReversed = {\n  'Afghanistan': 'AF',\n  'Aland Islands': 'AX',\n  'Albania': 'AL',\n  'Algeria': 'DZ',\n  'American Samoa': 'AS',\n  'Andorra': 'AD',\n  'Angola': 'AO',\n  'Anguilla': 'AI',\n  'Antarctica': 'AQ',\n  'Antigua And Barbuda': 'AG',\n  'Argentina': 'AR',\n  'Armenia': 'AM',\n  'Aruba': 'AW',\n  'Australia': 'AU',\n  'Austria': 'AT',\n  'Azerbaijan': 'AZ',\n  'Bahamas': 'BS',\n  'Bahrain': 'BH',\n  'Bangladesh': 'BD',\n  'Barbados': 'BB',\n  'Belarus': 'BY',\n  'Belgium': 'BE',\n  'Belize': 'BZ',\n  'Benin': 'BJ',\n  'Bermuda': 'BM',\n  'Bhutan': 'BT',\n  'Bolivia': 'BO',\n  'Bosnia And Herzegovina': 'BA',\n  'Botswana': 'BW',\n  'Bouvet Island': 'BV',\n  'Brazil': 'BR',\n  'British Indian Ocean Territory': 'IO',\n  'Brunei Darussalam': 'BN',\n  'Bulgaria': 'BG',\n  'Burkina Faso': 'BF',\n  'Burundi': 'BI',\n  'Cambodia': 'KH',\n  'Cameroon': 'CM',\n  'Canada': 'CA',\n  'Cape Verde': 'CV',\n  'Cayman Islands': 'KY',\n  'Central African Republic': 'CF',\n  'Chad': 'TD',\n  'Chile': 'CL',\n  'China': 'CN',\n  'Christmas Island': 'CX',\n  'Cocos (Keeling) Islands': 'CC',\n  'Colombia': 'CO',\n  'Comoros': 'KM',\n  'Congo': 'CG',\n  'Congo, Democratic Republic': 'CD',\n  'Cook Islands': 'CK',\n  'Costa Rica': 'CR',\n  'Cote D\\'Ivoire': 'CI',\n  'Croatia': 'HR',\n  'Cuba': 'CU',\n  'Cyprus': 'CY',\n  'Czech Republic': 'CZ',\n  'Denmark': 'DK',\n  'Djibouti': 'DJ',\n  'Dominica': 'DM',\n  'Dominican Republic': 'DO',\n  'Ecuador': 'EC',\n  'Egypt': 'EG',\n  'El Salvador': 'SV',\n  'Equatorial Guinea': 'GQ',\n  'Eritrea': 'ER',\n  'Estonia': 'EE',\n  'Ethiopia': 'ET',\n  'Falkland Islands (Malvinas)': 'FK',\n  'Faroe Islands': 'FO',\n  'Fiji': 'FJ',\n  'Finland': 'FI',\n  'France': 'FR',\n  'French Guiana': 'GF',\n  'French Polynesia': 'PF',\n  'French Southern Territories': 'TF',\n  'Gabon': 'GA',\n  'Gambia': 'GM',\n  'Georgia': 'GE',\n  'Germany': 'DE',\n  'Ghana': 'GH',\n  'Gibraltar': 'GI',\n  'Greece': 'GR',\n  'Greenland': 'GL',\n  'Grenada': 'GD',\n  'Guadeloupe': 'GP',\n  'Guam': 'GU',\n  'Guatemala': 'GT',\n  'Guernsey': 'GG',\n  'Guinea': 'GN',\n  'Guinea-Bissau': 'GW',\n  'Guyana': 'GY',\n  'Haiti': 'HT',\n  'Heard Island & Mcdonald Islands': 'HM',\n  'Holy See (Vatican City State)': 'VA',\n  'Honduras': 'HN',\n  'Hong Kong': 'HK',\n  'Hungary': 'HU',\n  'Iceland': 'IS',\n  'India': 'IN',\n  'Indonesia': 'ID',\n  'Iran, Islamic Republic Of': 'IR',\n  'Iraq': 'IQ',\n  'Ireland': 'IE',\n  'Isle Of Man': 'IM',\n  'Israel': 'IL',\n  'Italy': 'IT',\n  'Jamaica': 'JM',\n  'Japan': 'JP',\n  'Jersey': 'JE',\n  'Jordan': 'JO',\n  'Kazakhstan': 'KZ',\n  'Kenya': 'KE',\n  'Kiribati': 'KI',\n  'Korea': 'KR',\n  'Kuwait': 'KW',\n  'Kyrgyzstan': 'KG',\n  'Lao People\\'s Democratic Republic': 'LA',\n  'Latvia': 'LV',\n  'Lebanon': 'LB',\n  'Lesotho': 'LS',\n  'Liberia': 'LR',\n  'Libyan Arab Jamahiriya': 'LY',\n  'Liechtenstein': 'LI',\n  'Lithuania': 'LT',\n  'Luxembourg': 'LU',\n  'Macao': 'MO',\n  'Macedonia': 'MK',\n  'Madagascar': 'MG',\n  'Malawi': 'MW',\n  'Malaysia': 'MY',\n  'Maldives': 'MV',\n  'Mali': 'ML',\n  'Malta': 'MT',\n  'Marshall Islands': 'MH',\n  'Martinique': 'MQ',\n  'Mauritania': 'MR',\n  'Mauritius': 'MU',\n  'Mayotte': 'YT',\n  'Mexico': 'MX',\n  'Micronesia, Federated States Of': 'FM',\n  'Moldova': 'MD',\n  'Monaco': 'MC',\n  'Mongolia': 'MN',\n  'Montenegro': 'ME',\n  'Montserrat': 'MS',\n  'Morocco': 'MA',\n  'Mozambique': 'MZ',\n  'Myanmar': 'MM',\n  'Namibia': 'NA',\n  'Nauru': 'NR',\n  'Nepal': 'NP',\n  'Netherlands': 'NL',\n  'Netherlands Antilles': 'AN',\n  'New Caledonia': 'NC',\n  'New Zealand': 'NZ',\n  'Nicaragua': 'NI',\n  'Niger': 'NE',\n  'Nigeria': 'NG',\n  'Niue': 'NU',\n  'Norfolk Island': 'NF',\n  'Northern Mariana Islands': 'MP',\n  'Norway': 'NO',\n  'Oman': 'OM',\n  'Pakistan': 'PK',\n  'Palau': 'PW',\n  'Palestinian Territory, Occupied': 'PS',\n  'Panama': 'PA',\n  'Papua New Guinea': 'PG',\n  'Paraguay': 'PY',\n  'Peru': 'PE',\n  'Philippines': 'PH',\n  'Pitcairn': 'PN',\n  'Poland': 'PL',\n  'Portugal': 'PT',\n  'Puerto Rico': 'PR',\n  'Qatar': 'QA',\n  'Reunion': 'RE',\n  'Romania': 'RO',\n  'Russian Federation': 'RU',\n  'Rwanda': 'RW',\n  'Saint Barthelemy': 'BL',\n  'Saint Helena': 'SH',\n  'Saint Kitts And Nevis': 'KN',\n  'Saint Lucia': 'LC',\n  'Saint Martin': 'MF',\n  'Saint Pierre And Miquelon': 'PM',\n  'Saint Vincent And Grenadines': 'VC',\n  'Samoa': 'WS',\n  'San Marino': 'SM',\n  'Sao Tome And Principe': 'ST',\n  'Saudi Arabia': 'SA',\n  'Senegal': 'SN',\n  'Serbia': 'RS',\n  'Seychelles': 'SC',\n  'Sierra Leone': 'SL',\n  'Singapore': 'SG',\n  'Slovakia': 'SK',\n  'Slovenia': 'SI',\n  'Solomon Islands': 'SB',\n  'Somalia': 'SO',\n  'South Africa': 'ZA',\n  'South Georgia And Sandwich Isl.': 'GS',\n  'Spain': 'ES',\n  'Sri Lanka': 'LK',\n  'Sudan': 'SD',\n  'Suriname': 'SR',\n  'Svalbard And Jan Mayen': 'SJ',\n  'Swaziland': 'SZ',\n  'Sweden': 'SE',\n  'Switzerland': 'CH',\n  'Syrian Arab Republic': 'SY',\n  'Taiwan': 'TW',\n  'Tajikistan': 'TJ',\n  'Tanzania': 'TZ',\n  'Thailand': 'TH',\n  'Timor-Leste': 'TL',\n  'Togo': 'TG',\n  'Tokelau': 'TK',\n  'Tonga': 'TO',\n  'Trinidad And Tobago': 'TT',\n  'Tunisia': 'TN',\n  'Turkey': 'TR',\n  'Turkmenistan': 'TM',\n  'Turks And Caicos Islands': 'TC',\n  'Tuvalu': 'TV',\n  'Uganda': 'UG',\n  'Ukraine': 'UA',\n  'United Arab Emirates': 'AE',\n  'United Kingdom': 'GB',\n  'United States': 'US',\n  'United States Outlying Islands': 'UM',\n  'Uruguay': 'UY',\n  'Uzbekistan': 'UZ',\n  'Vanuatu': 'VU',\n  'Venezuela': 'VE',\n  'Viet Nam': 'VN',\n  'Virgin Islands, British': 'VG',\n  'Virgin Islands, U.S.': 'VI',\n  'Wallis And Futuna': 'WF',\n  'Western Sahara': 'EH',\n  'Yemen': 'YE',\n  'Zambia': 'ZM',\n  'Zimbabwe': 'ZW',\n}\nexport const countryNames = Object.keys(countries).map(k => countries[k])\n// export const countryNames = Object.keys(countries).map(k => countries[k])\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main-app',\n  templateUrl: './main-app.component.html',\n  styleUrls: ['./main-app.component.scss']\n})\nexport class MainAppComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item routerLink=\"\">Global</a>\n      <a mat-list-item routerLink=\"brazil\">Brazil</a>\n      <a mat-list-item routerLink=\"analyzes\">Analyzes</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\" style=\"display: flex; justify-content: space-between;\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Covid19 Dashboard - LADES Research Group</span>\n      <span>\n        <img src=\"./assets/cropped-Marcas_Lades.png\" alt=\"\" srcset=\"\" style=\"width: 100px; background-color: white;\">\n      </span>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n    <!-- Add Content Here -->\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-brazil',\n  templateUrl: './page-brazil.component.html',\n  styleUrls: ['./page-brazil.component.scss']\n})\nexport class PageBrazilComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>Under development</p>\n","import { Component, OnInit } from \"@angular/core\";\nimport { GlobalDataService } from \"src/app/services/global-data.service\";\nimport { map, filter, startWith, debounceTime } from \"rxjs/operators\";\nimport { countriesReversed } from \"src/app/data/countries\";\nimport { FormControl } from \"@angular/forms\";\n\nconst iconBarSvg = {\n  width: 1000,\n  height: 1000,\n  name: \"newplotlylogo\",\n  svg:\n    '<svg enable-background=\"new 0 0 50 50\" height=\"50px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 50 50\" width=\"50px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><rect fill=\"none\" height=\"31\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" width=\"12\" x=\"3\" y=\"18\"/><rect fill=\"none\" height=\"20\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" width=\"12\" x=\"19\" y=\"29\"/><rect fill=\"none\" height=\"44\" stroke=\"#000000\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" width=\"12\" x=\"35\" y=\"5\"/><rect fill=\"none\" height=\"50\" width=\"50\"/></svg>',\n};\n\nconst lineChartSvg = {\n  width: 1000,\n  height: 1000,\n  name: \"newplotlylogo\",\n  svg:\n    '<svg enable-background=\"new 0 0 50 50\" height=\"50px\" id=\"Layer_1\" version=\"1.1\" viewBox=\"0 0 50 50\" width=\"50px\" xml:space=\"preserve\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><rect fill=\"none\" height=\"50\" width=\"50\"/><circle cx=\"2\" cy=\"25\" r=\"2\"/><circle cx=\"15\" cy=\"19\" r=\"2\"/><circle cx=\"25\" cy=\"11\" r=\"2\"/><circle cx=\"35\" cy=\"17\" r=\"2\"/><circle cx=\"48\" cy=\"5\" r=\"2\"/><circle cx=\"2\" cy=\"39\" r=\"2\"/><circle cx=\"15\" cy=\"41\" r=\"2\"/><circle cx=\"25\" cy=\"33\" r=\"2\"/><circle cx=\"35\" cy=\"43\" r=\"2\"/><circle cx=\"48\" cy=\"31\" r=\"2\"/><polyline fill=\"none\" points=\"2,25 15,19 25,11   35,17 48,5 \" stroke=\"#000000\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/><polyline fill=\"none\" points=\"2,39 15,41 25,33   35,43 48,31 \" stroke=\"#000000\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\"/></svg>',\n};\n\n@Component({\n  selector: \"app-page-global\",\n  templateUrl: \"./page-global.component.html\",\n  styleUrls: [\"./page-global.component.scss\"],\n})\nexport class PageGlobalComponent implements OnInit {\n  METRICS = [\n    { v: \"confirmed\", n: \"Confirmed\" },\n    { v: \"deaths\", n: \"Deaths\" },\n    // { v: \"recovered\", n: \"Recovered\" },\n  ];\n\n  typesCalc = [\n    { v: \"cummulative\", n: \"Cummulative\" },\n    { v: \"daily\", n: \"Daily\" },\n    // { v: \"recovered\", n: \"Recovered\" },\n  ];\n\n  // selectedMetric: string\n  metricCtrl = new FormControl(\"confirmed\");\n  typeCtrl = new FormControl(\"cummulative\");\n  normalizeInitialCtrl = new FormControl(0);\n  countryCodes: string[];\n  isLine = true;\n\n  constructor(public globalSvr: GlobalDataService) {\n    this.metricCtrl.valueChanges\n      .pipe(filter((v) => !!v))\n      .subscribe((metric) => {\n        console.log(\"metric changed\");\n        this.globalSvr.triggerCountriesDataSubject();\n      });\n\n    this.typeCtrl.valueChanges.pipe(filter((v) => !!v)).subscribe((type) => {\n      console.log(\"type changed\");\n      if (type != 'cummulative')\n        this.isLine = false\n      this.handleLineOrBar();\n    });\n\n    this.normalizeInitialCtrl.valueChanges.pipe(\n      debounceTime(250)\n    ).subscribe((type) => {\n      console.log(\"normalizeInitialCtrl changed\");\n      this.globalSvr.triggerCountriesDataSubject();\n    });\n  }\n\n  graph$ = this.globalSvr.countriesData$.pipe(\n    filter((values) => !!values.length),\n    map((values) => {\n      console.log('IN GRAPH PIPE');\n      const timelinesContries = values.map(\n        (value) => value.location.timelines[this.metricCtrl.value].timeline\n      );\n      const timelinesArrays: any[] = timelinesContries.map((timeline) => {\n        const x = Object.keys(timeline);\n        const y = x.map((x_iter) => timeline[x_iter]);\n        return { x, y };\n      });\n      const normStart = this.normalizeInitialCtrl.value\n      let normalizedStartCountries = timelinesArrays\n      if (normStart > 0) {\n        normalizedStartCountries = timelinesArrays.map(caseCountry => {\n        let filteredCumm = 0\n        try {\n          filteredCumm = caseCountry.y.findIndex(y => y > normStart)\n        } catch (error) {\n          console.log('Error in normalization starting value');\n        }\n          return {\n            x: caseCountry.x.slice(filteredCumm).map((v,i) => i),\n            y: caseCountry.y.slice(filteredCumm)\n          }\n        })\n      }\n      const timeLinesArraysAdjusted = normalizedStartCountries.map((arr) =>\n        this.adjusttimeSeriesToCalcType(arr)\n      );\n      const traces = timeLinesArraysAdjusted.map((countryMod, i) => {\n        return {\n          x: countryMod.x,\n          y: countryMod.y,\n          type: \"scatter\",\n          mode: \"lines+markers\",\n          // marker: { color: \"red\" },\n          name: values[i].location.country,\n        };\n      });\n      const obj = {\n        layout: {\n          // width: '100%',\n          // height: 640,\n          title: `Metric: ${this.metricCtrl.value} cases`,\n        },\n        data: traces,\n      };\n      return obj;\n    })\n  );\n\n  adjusttimeSeriesToCalcType(array: { x: string[] | number[]; y: number[] }) {\n    const typeCalc = this.typeCtrl.value;\n    if (typeCalc == \"cummulative\") return array;\n    else if (typeCalc == \"daily\") {\n      const prev = array.y.slice(0, array.y.length - 1);\n      const diff = array.y.slice(1).map((v, i) => v - prev[i]);\n      return { ...array, y: diff };\n    }\n  }\n\n  ngOnInit(): void {\n    // const codes = [\"US\", \"BR\"];\n    // var requestOptions = <RequestInit>{\n    //   method: 'GET',\n    //   redirect: 'follow'\n    // };\n    // fetch(\"https://thevirustracker.com/free-api?countryTimeline=US\", requestOptions)\n    //   .then(response => response.text())\n    //   .then(result => console.log(result))\n    //   .catch(error => console.log('error', error));\n    // this.globalSvr.addCountryData(codes);\n  }\n\n  handleCountrySelection(countryNames: string[]) {\n    this.countryCodes = countryNames.map((v) => countriesReversed[v]);\n    this.getData();\n  }\n\n  getData() {\n    // return\n    this.globalSvr.addCountryData({\n      countryCodes: this.countryCodes,\n      metric: this.metricCtrl.value,\n    });\n  }\n\n\n  handleLineOrBar() {\n    const typeplt = this.isLine ? \"scatter\" : \"bar\";\n    const nameplt = !this.isLine ? \"Lines\" : \"Bars\";\n    const iconplt = !this.isLine ? lineChartSvg : iconBarSvg;\n    this.graph$ = this.graph$.pipe(\n      map((graph) => {\n        graph.data.forEach((trace) => {\n          trace.type = typeplt;\n        });\n        return graph;\n      })\n    );\n    const newModeBar = [\n      [\n        {\n          name: `Show as ${nameplt}`,\n          icon: iconplt,\n          click: (element) => {\n            this.handleLineOrBar();\n          },\n        },\n      ],\n      [\"toImage\"],\n      [\"pan2d\"],\n      [\"select2d\"],\n      [\"zoomIn2d\"],\n      [\"zoomOut2d\"],\n      [\"autoScale2d\"],\n      [\"resetScale2d\"],\n    ];\n    this.plotlyConfigRef.modeBarButtons = newModeBar;\n    this.isLine = !this.isLine;\n  }\n\n  modeBarButtons = [\n    [\n      {\n        name: \"Show as Bars\",\n        icon: iconBarSvg,\n        click: (element) => {\n          this.handleLineOrBar();\n        },\n      },\n    ],\n    [\"toImage\"],\n    [\"pan2d\"],\n    [\"select2d\"],\n    [\"zoomIn2d\"],\n    [\"zoomOut2d\"],\n    [\"autoScale2d\"],\n    [\"resetScale2d\"],\n  ];\n\n  plotlyConfigRef = {\n    displaylogo: false,\n    scrollZoom: false,\n    //https://github.com/plotly/plotly.js/blob/master/src/components/modebar/buttons.js\n    modeBarButtons: this.modeBarButtons,\n  };\n}\n","<div style=\"margin: 10px; display: flex; flex-direction: column;\">\n\n  <div style=\"display: flex; justify-content: space-evenly;\">\n    <mat-form-field style=\"flex-basis: 33%;\">\n      <mat-label>Metric</mat-label>\n      <mat-select\n        [formControl]=\"metricCtrl\">\n        <mat-option *ngFor=\"let metric of METRICS\" [value]=\"metric.v\">\n          {{metric.n}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field style=\"flex-basis: 33%;\">\n      <mat-label>Type</mat-label>\n      <mat-select\n        [formControl]=\"typeCtrl\">\n        <mat-option *ngFor=\"let type of typesCalc\" [value]=\"type.v\">\n          {{type.n}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field style=\"flex-basis: 33%;\">\n      <mat-label>Normalize to initial case number</mat-label>\n      <input [formControl]=\"normalizeInitialCtrl\" matInput placeholder=\"Normalize to initial case number\" value=\"0\" type=\"number\">\n    </mat-form-field>\n  </div>\n\n  <app-chips-autocomplete (onSelectionChange)=\"handleCountrySelection($event)\">\n  </app-chips-autocomplete>\n\n\n\n  <div *ngIf=\"(graph$ | async) as graph\" style=\"width: 100%;\">\n    <plotly-plot [data]=\"graph.data\" [layout]=\"graph.layout\" [useResizeHandler]=\"true\"\n      [style]=\"{position: 'relative', width: '100%', height: '100%'}\"\n      [config]=\"plotlyConfigRef\">\n    </plotly-plot>\n  </div>\n</div>\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { retry, catchError, tap, switchMap, map } from \"rxjs/operators\";\nimport { ObservableInput, BehaviorSubject, forkJoin } from \"rxjs\";\n\n// const urlGlobalBase = \"https://thevirustracker.com/free-api?countryTimeline=\";\nconst urlGlobalBase = \"https://coronavirus-tracker-api.herokuapp.com/v2/locations/\"\nconst urlLocationCountries = \"https://coronavirus-tracker-api.herokuapp.com/v2/locations\"\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GlobalDataService {\n  constructor(private http: HttpClient) {}\n\n  // requestCountryData(countryCode: string) {\n  requestLocationData(locationId: number) {\n    return this.http\n      .get<any>(this.getUrlGlobal(locationId))\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError) // then handle the error\n      )\n  }\n\n  requestContryLocationId(countryCode: string) {\n    return this.http\n      .get<any>(`${urlLocationCountries}?country_code=${countryCode}`)\n      .pipe(\n        retry(3), // retry a failed request up to 3 times\n        catchError(this.handleError) // then handle the error\n      )\n  }\n\n  requestCountryData(countrycode: string) {\n    return this.requestContryLocationId(countrycode).pipe(\n      map(resp => {\n        console.log('switched');\n        return resp.locations[0].id\n      }),\n      switchMap((idLocation: any) => {\n        return this.requestLocationData(idLocation)\n      })\n    )\n  }\n\n  // getUrlGlobal(countryCode: string) {\n    getUrlGlobal(countryCode: number) {\n    return `${urlGlobalBase}${countryCode}`;\n    // return `${urlGlobalBase}`;\n  }\n\n  handleError(error: any): ObservableInput<any> {\n    console.log(\"error\");\n    return;\n  }\n\n  // Store\n  private readonly countriesDataSubjst = new BehaviorSubject<any[]>([]);\n  readonly countriesData$ = this.countriesDataSubjst.asObservable();\n\n  private get countriesData(): any[] {\n    return this.countriesDataSubjst.getValue();\n  }\n\n  private set countriesData(val: any[]) {\n    this.countriesDataSubjst.next(val);\n  }\n\n  public triggerCountriesDataSubject() {\n    this.countriesDataSubjst.next(this.countriesData)\n  }\n\n\n  /*\n  Obs: metric is not being used here... it provides all the data\n  */\n  addCountryData({countryCodes, metric}: {countryCodes: string[], metric: string}) {\n    // const codes = [39, 40]\n    const observables = countryCodes.map((code) =>\n      this.requestCountryData(code)\n    );\n\n    forkJoin(observables)\n      .pipe(\n        tap((array) => {\n          this.countriesData = array;\n        })\n      )\n      .subscribe((resp) => {\n        console.log(\"resp!\");\n      });\n    // const newCountryData\n    // this.countriesData = [\n    //   ...this.countriesData,\n    //   newCountryData\n    // ]\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}